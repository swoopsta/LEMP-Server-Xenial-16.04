# VisiStruct.com's LEMH Server config. https://github.com/VisiStruct/LEMH-Server/blob/master/README.md
# Follow our GitHub at https://github.com/VisiStruct
# Check us out at https://VisiStruct.com - Orlando Web Design and Maintenance

#FastCGI Cache
fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=VisiStructWP:120m inactive=30m max_size=64m;
fastcgi_cache_key $scheme$request_method$host$request_uri;
fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
fastcgi_ignore_client_abort off;
fastcgi_intercept_errors on;
fastcgi_connect_timeout 60;
fastcgi_send_timeout 180;
fastcgi_read_timeout 180;
fastcgi_buffer_size 256k;
fastcgi_buffers 4 256k;
fastcgi_busy_buffers_size 256k;
fastcgi_temp_file_write_size 256k;
fastcgi_cache_bypass $no_cache;
fastcgi_no_cache $no_cache;
fastcgi_max_temp_file_size 5m;
fastcgi_pass_header Set-Cookie;
fastcgi_pass_header Cookie;
fastcgi_cache_lock on;
fastcgi_cache_valid   200 302  2h;
fastcgi_cache_valid   301 2h;
fastcgi_cache_valid   any 15m;

# Powered By Header
#more_set_headers 'Server: nginx'
more_set_headers 'X-Powered-By: VisiStruct.com | Orlando Website Design';

# Security Headers
#
# Be careful setting headers that you don't fully understand, you can break things bad.
# Learn more about these headers at:
# Referrer-Policy: https://scotthelme.co.uk/a-new-security-header-referrer-policy/
# X-Robots-Tag: https://yoast.com/x-robots-tag-play/
# Content-Security-Policy: https://developers.google.com/web/fundamentals/security/csp/
#
more_set_headers 'X-Content-Type-Options: nosniff';
more_set_headers 'X-Frame-Options: SAMEORIGIN';
more_set_headers 'X-XSS-Protection: 1; mode=block';
more_set_headers 'Expect-CT enforce; max-age=3600';
more_set_headers 'Referrer-Policy no-referrer';
#more_set_headers 'X-Robots-Tag none'; 
#more_set_headers "Content-Security-Policy: default-src 'self' data: 'unsafe-inline' 'unsafe-eval' *.compilenix.org compilenix.org dharma.no-trust.org *.googleapis.com *.gstatic.com *.gravatar.com code.jquery.com; frame-ancestors 'self' ; form-action 'self' ; upgrade-insecure-requests; block-all-mixed-content; reflected-xss block; referrer no-referrer;";

server {
        listen 80;
        listen [::]:80 default_server;
        server_name yourdomain.com www.yourdomain.com;
        return 301 https://yourdomain.com$request_uri;
    }

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name yourdomain.com www.yourdomain.com;
        ssl_certificate /etc/nginx/ssl/yourdomain.com.crt;
        ssl_certificate_key /etc/nginx/ssl/yourdomain.com.key;
        ssl_dhparam /etc/nginx/ssl/yourdomain.com.pem;
        ssl_session_cache      shared:SSL:50m;
        ssl_session_timeout  1d;
        ssl_buffer_size 1400;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        more_set_headers 'Strict-Transport-Security max-age=15768000';

        # OCSP Stapling ---
        # fetch OCSP records from URL in ssl_certificate and cache them
        #resolver 8.8.8.8 8.8.4.4 valid=300s; #Cache resolver 
        #ssl_stapling on;
        #ssl_stapling_verify on;

        ## verify chain of trust of OCSP response using Root CA and Intermediate certs
        #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

        root /var/www/yourdomain.com/html;

        # WP Pretty Permalinks
        location / {
                try_files $uri $uri/ /index.php?$args;
                #try_files $uri/ /index.php?$args;
                #try_files $uri $uri/ /index.php?$query_string;
            }

        # FastCGI Cache Rules

        # FastCGI_Cache Start
        set $no_cache 0;

        # POST requests and urls with a query string should always go to PHP
        if ($request_method = POST) {
                set $no_cache 1; 
            }		

        if ($query_string != "") { 
                set $no_cache 1; 
            }

        # Don't cache uris containing the following segments
        if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {       
                set $no_cache 1;
            }

        # Don't use the cache for logged in users or recent commenters
        if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {        
                set $no_cache 1;
            }

        # WooCommerce Specific Rules 
        # Below are a few examples of solutions to prevent unwanted caching when using WooCommerce.

        # Do not cache WooCommerce default pages
        # If you've renamed your woocommerce page names or have other unique parts of your site that you do not wish to be cached, you'll need to edit the locations below.
        #if ($request_uri ~* "/shop.*|/cart.*|/my-account.*|/checkout.*|/addons.*") {
                #set $no_cache 1;
            #}

        # Do not cache if WooCommerce cookie is set
        #if ($http_cookie ~* "wp_woocommerce_session_[^=]*=([^%]+)%7C") {        
                # set $no_cache 1;
            #}

        # Still caching stuff? This is usually not needed, but you can try this as well.
        #if ( $cookie_woocommerce_items_in_cart != "1" ) {
                #set $no_cache 1;
            #}

        # Purge Cache
        location ~ /purge(/.*) {
                fastcgi_cache_purge VisiStructWP "$scheme$request_method$host$1";
            }

        location ~ \.php$ {
                try_files $uri /index.php =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
                fastcgi_index index.php;
                include fastcgi.conf;
                fastcgi_cache VisiStructWP;
                add_header X-FastCGI-Cached $upstream_cache_status;
            }

        # CloudFlare - If using CloudFlare, you'll need this to be able to show visitors real IPs.
        set_real_ip_from 103.21.244.0/22;
        set_real_ip_from 103.22.200.0/22;
        set_real_ip_from 103.31.4.0/22;
        set_real_ip_from 104.16.0.0/12;
        set_real_ip_from 108.162.192.0/18;
        set_real_ip_from 131.0.72.0/22;
        set_real_ip_from 141.101.64.0/18;
        set_real_ip_from 162.158.0.0/15;
        set_real_ip_from 172.64.0.0/13;
        set_real_ip_from 173.245.48.0/20;
        set_real_ip_from 188.114.96.0/20;
        set_real_ip_from 190.93.240.0/20;
        set_real_ip_from 197.234.240.0/22;
        set_real_ip_from 198.41.128.0/17;
        set_real_ip_from 199.27.128.0/21;
        set_real_ip_from 2400:cb00::/32;
        set_real_ip_from 2405:b500::/32;
        set_real_ip_from 2405:8100::/32;
        set_real_ip_from 2606:4700::/32;
        set_real_ip_from 2803:f800::/32;
        set_real_ip_from 2c0f:f248::/32;
        set_real_ip_from 2a06:98c0::/29;
        real_ip_header CF-Connecting-IP;

        access_log /var/log/domains/yourdomain.com.access.log;
        error_log /var/log/domains/yourdomain.com.error.log error;

        # Yoast sitemap
                location ~ ([^/]*)sitemap(.*)\.x(m|s)l$ {
                ## this redirects sitemap.xml to /sitemap_index.xml
                rewrite ^/sitemap\.xml$ /sitemap_index.xml permanent;
                ## this makes the XML sitemaps work
                rewrite ^/([a-z]+)?-?sitemap\.xsl$ /index.php?xsl=$1 last;
                rewrite ^/sitemap_index\.xml$ /index.php?sitemap=1 last;
                rewrite ^/([^/]+?)-sitemap([0-9]+)?\.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
                ## The following lines are optional for the premium extensions
                ## News SEO
                rewrite ^/news-sitemap\.xml$ /index.php?sitemap=wpseo_news last;
                ## Local SEO
                rewrite ^/locations\.kml$ /index.php?sitemap=wpseo_local_kml last;
                rewrite ^/geo-sitemap\.xml$ /index.php?sitemap=wpseo_local last;
                ## Video SEO
                rewrite ^/video-sitemap\.xsl$ /index.php?xsl=video last;
            }

        include /etc/nginx/wpsecurity.conf;
        include /etc/nginx/fileheaders.conf;
    }
